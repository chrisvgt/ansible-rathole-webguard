# Rathole Configuration File - Generated by Ansible

{% if rathole_role == "server" %}
[server]
{% if rathole_server_config.listen_addr is defined %}
bind_addr = "{{ rathole_server_config.listen_addr }}"
{% endif %}
{% if rathole_server_config.default_token is defined %}
default_token = "{{ rathole_server_config.default_token }}"
{% endif %}
{% if rathole_server_config.heartbeat_interval is defined %}
heartbeat_interval = {{ rathole_server_config.heartbeat_interval }}
{% endif %}

{% if rathole_server_config.transport is defined %}
[server.transport]
type = "{{ rathole_server_config.transport.type }}"

{% if rathole_server_config.transport.type == "tcp" and rathole_server_config.transport.tcp is defined %}
[server.transport.tcp]
{% if rathole_server_config.transport.tcp.nodelay is defined %}
nodelay = {{ rathole_server_config.transport.tcp.nodelay | lower }}
{% endif %}
{% if rathole_server_config.transport.tcp.keepalive_secs is defined %}
keepalive_secs = {{ rathole_server_config.transport.tcp.keepalive_secs }}
{% endif %}
{% if rathole_server_config.transport.tcp.keepalive_interval is defined %}
keepalive_interval = {{ rathole_server_config.transport.tcp.keepalive_interval }}
{% endif %}
{% elif rathole_server_config.transport.type == "tls" and rathole_server_config.transport.tls is defined %}
[server.transport.tls]
pkcs12 = "{{ rathole_server_config.transport.tls.pkcs12 }}"
pkcs12_password = "{{ rathole_server_config.transport.tls.pkcs12_password }}"
{% elif rathole_server_config.transport.type == "noise" and rathole_server_config.transport.noise is defined %}
[server.transport.noise]
pattern = "{{ rathole_server_config.transport.noise.pattern }}"
local_private_key = "{{ rathole_server_config.transport.noise.local_private_key }}"
remote_public_key = "{{ rathole_server_config.transport.noise.remote_public_key }}"
{% elif rathole_server_config.transport.type == "websocket" and rathole_server_config.transport.websocket is defined %}
[server.transport.tls]
pkcs12 = "{{ rathole_server_config.transport.tls.pkcs12 }}"
pkcs12_password = "{{ rathole_server_config.transport.tls.pkcs12_password }}"

[server.transport.websocket]
tls = {{ rathole_server_config.transport.websocket.tls | lower }}
{% endif %}
{% endif %}

{% if rathole_server_config.services is defined %}
{% for service in rathole_server_config.services %}
[server.services.{{ service.name }}]
{% if service.type is defined %}
type = "{{ service.type }}"
{% endif %}
{% if service.token is defined %}
token = "{{ service.token }}"
{% endif %}
{% if service.bind_addr is defined %}
bind_addr = "{{ service.bind_addr }}"
{% endif %}
{% if service.nodelay is defined %}
nodelay = {{ service.nodelay | lower }}
{% endif %}

{% endfor %}
{% endif %}

{% elif rathole_role == "client" %}
[client]
{% if rathole_client_config.remote_addr is defined %}
remote_addr = "{{ rathole_client_config.remote_addr }}"
{% endif %}
{% if rathole_client_config.default_token is defined %}
default_token = "{{ rathole_client_config.default_token }}"
{% endif %}
{% if rathole_client_config.heartbeat_timeout is defined %}
heartbeat_timeout = {{ rathole_client_config.heartbeat_timeout }}
{% endif %}
{% if rathole_client_config.retry_interval is defined %}
retry_interval = {{ rathole_client_config.retry_interval }}
{% endif %}

{% if rathole_client_config.transport is defined %}
[client.transport]
type = "{{ rathole_client_config.transport.type }}"

{% if rathole_client_config.transport.type == "tcp" and rathole_client_config.transport.tcp is defined %}
[client.transport.tcp]
{% if rathole_client_config.transport.tcp.proxy is defined %}
proxy = "{{ rathole_client_config.transport.tcp.proxy }}"
{% endif %}
{% if rathole_client_config.transport.tcp.nodelay is defined %}
nodelay = {{ rathole_client_config.transport.tcp.nodelay | lower }}
{% endif %}
{% if rathole_client_config.transport.tcp.keepalive_secs is defined %}
keepalive_secs = {{ rathole_client_config.transport.tcp.keepalive_secs }}
{% endif %}
{% if rathole_client_config.transport.tcp.keepalive_interval is defined %}
keepalive_interval = {{ rathole_client_config.transport.tcp.keepalive_interval }}
{% endif %}
{% elif rathole_client_config.transport.type == "tls" and rathole_client_config.transport.tls is defined %}
[client.transport.tls]
trusted_root = "{{ rathole_client_config.transport.tls.trusted_root }}"
{% if rathole_client_config.transport.tls.hostname is defined %}
hostname = "{{ rathole_client_config.transport.tls.hostname }}"
{% endif %}
{% elif rathole_client_config.transport.type == "noise" and rathole_client_config.transport.noise is defined %}
[client.transport.noise]
pattern = "{{ rathole_client_config.transport.noise.pattern }}"
local_private_key = "{{ rathole_client_config.transport.noise.local_private_key }}"
remote_public_key = "{{ rathole_client_config.transport.noise.remote_public_key }}"
{% elif rathole_client_config.transport.type == "websocket" and rathole_client_config.transport.websocket is defined %}
[client.transport.tls]
trusted_root = "{{ rathole_client_config.transport.tls.trusted_root }}"

[client.transport.websocket]
tls = {{ rathole_client_config.transport.websocket.tls | lower }}
{% endif %}
{% endif %}

{% if rathole_client_config.services is defined %}
{% for service in rathole_client_config.services %}
[client.services.{{ service.name }}]
{% if service.type is defined %}
type = "{{ service.type }}"
{% endif %}
{% if service.token is defined %}
token = "{{ service.token }}"
{% endif %}
{% if service.local_addr is defined %}
local_addr = "{{ service.local_addr }}"
{% endif %}
{% if service.nodelay is defined %}
nodelay = {{ service.nodelay | lower }}
{% endif %}
{% if service.retry_interval is defined %}
retry_interval = {{ service.retry_interval }}
{% endif %}

{% endfor %}
{% endif %}

{% else %}
# This block runs if rathole_role is not 'server' or 'client'
# Consider adding an assertion task in your playbook if this is an invalid state
# - name: Fail if rathole_role is not defined or is invalid
#   ansible.builtin.assert:
#     that:
#       - rathole_role == "server" or rathole_role == "client"
#     fail_msg: "rathole_role must be 'server' or 'client'"
{% endif %}