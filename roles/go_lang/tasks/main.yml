# roles/go_lang/tasks/main.yml

- name: Normalize Go installation path
  ansible.builtin.set_fact:
    go_lang_install_path: "{{ (go_lang_install_path | default(go_lang_install_path_default)) | regex_replace('/+$', '') }}"

- name: Ensure Go installation path exists
  ansible.builtin.file:
    path: "{{ go_lang_install_path }}" # Typically /usr/local
    state: directory
    mode: "0755"

- name: Check if Go is already installed
  ansible.builtin.command:
    cmd: "{{ go_lang_binary_path }}/go version"
  register: go_lang_version_check
  failed_when: false
  changed_when: false

- name: Set installed Go version fact
  ansible.builtin.set_fact:
    go_lang_installed_go_version: "{{ go_lang_version_check.stdout | regex_search('go[0-9.]+') | default('') }}"
  when: go_lang_version_check.rc == 0

- name: Check if Go tarball version matches installed version
  ansible.builtin.set_fact:
    go_lang_version_match: "{{ go_lang_installed_go_version | regex_replace('^go', '') == go_lang_version }}"
  when: go_lang_installed_go_version is defined and go_lang_installed_go_version | length > 0

- name: Ensure Go tarball is downloaded if not installed or version mismatch
  ansible.builtin.get_url:
    url: "{{ go_lang_download_url }}"
    dest: "/tmp/{{ go_lang_archive_name }}"
    mode: "0644"
  when: go_lang_version_check.rc != 0 or not go_lang_version_match | default(false)

- name: Remove existing Go installation directory (if present)
  ansible.builtin.file:
    path: "{{ go_lang_install_path }}/go"
    state: absent
  when: go_lang_version_check.rc != 0 or not go_lang_version_match | default(false)

- name: Extract Go tarball to installation path
  ansible.builtin.unarchive:
    src: "/tmp/{{ go_lang_archive_name }}"
    dest: "{{ go_lang_install_path }}"
    remote_src: true
    creates: "{{ go_lang_install_path }}/go/bin/go"
    mode: "0755"
  when: go_lang_version_check.rc != 0 or not go_lang_version_match | default(false)

- name: Configure Go environment variables for all users
  ansible.builtin.blockinfile:
    path: "/etc/profile.d/go_env.sh"
    create: true
    mode: "0644"
    block: |
      export GOROOT={{ go_lang_install_path }}/go
      export GOPATH=$HOME/go
      export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
    marker: "# {mark} ANSIBLE MANAGED BLOCK for Go environment variables"

- name: Clean up temporary Go files
  ansible.builtin.file:
    path: "/tmp/{{ go_lang_archive_name }}"
    state: absent
  when: (go_lang_version_check.rc != 0 or not go_lang_version_match | default(false)) and go_lang_archive_name is defined
