# roles/caddy/tasks/main.yml
- name: Install required build dependencies for Caddy
  ansible.builtin.apt:
    name:
      - git
      - build-essential
      - apt-transport-https
      - curl
    state: present
  become: yes

- name: Create Caddy group
  ansible.builtin.group:
    name: "{{ caddy_group }}"
    state: present
    system: true
  become: yes

- name: Create Caddy user
  ansible.builtin.user:
    name: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    system: yes
    shell: "/usr/sbin/nologin"
    create_home: no
    # Caddy's HOME will be set via Environment variable in systemd service for better control
    state: present
  become: yes

# --- Ensure Caddy Directories Exist and Have Correct Permissions ---
- name: Ensure Caddy configuration directory exists and is owned by caddy user
  ansible.builtin.file:
    path: "{{ caddy_config_dir }}" # /etc/caddy
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0755'
  become: yes

- name: Ensure Caddy data directory exists and and is owned by caddy user
  ansible.builtin.file:
    path: "{{ caddy_data_dir }}" # /var/lib/caddy
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0755'
  become: yes

- name: Ensure Caddy config subdirectory (for autosave etc.) exists and is writable
  ansible.builtin.file:
    path: "{{ caddy_data_dir }}/caddy"
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0775'
  become: yes

- name: Ensure Caddy log directory exists and is owned by caddy user
  ansible.builtin.file:
    path: "{{ caddy_log_dir }}" # /var/log/caddy
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0755'
  become: yes

- name: Ensure Caddy's designated HOME directory (data dir) is writable for autosave.json
  ansible.builtin.file:
    path: "{{ caddy_data_dir }}" # This is the HOME set in caddy.service.j2
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: "0775" # Allow caddy user/group to write within this directory
    recurse: yes # Important for subdirectories like .config/caddy
  become: yes

# --- Build and Install Caddy with xcaddy ---
- name: Build Caddy with specified plugins using xcaddy
  ansible.builtin.command:
    cmd: /usr/local/bin/xcaddy build v{{ caddy_version }} --output {{ caddy_install_path }} {% if caddy_plugins | length > 0 and caddy_plugins[0] != '' %}{% for plugin in caddy_plugins %} --with {{ plugin }}{% endfor %}{% endif %}
    creates: "{{ caddy_install_path }}"
  environment:
    PATH: "{{ go_binary_path }}:{{ ansible_env.PATH }}"
    GOPATH: "/root/go"
  become: yes
  changed_when: true
  notify: restart caddy

- name: Set Caddy binary permissions
  ansible.builtin.file:
    path: "{{ caddy_install_path }}"
    mode: '0755'
    owner: root
    group: root
  become: yes

- name: Create Caddyfile from template
  ansible.builtin.template:
    src: "templates/Caddyfile.j2"
    dest: "{{ caddy_config_file }}"
    owner: "{{ caddy_user }}"
    group: "{{ caddy_group }}"
    mode: '0644'
  become: yes
  notify: restart caddy

- name: Format Caddyfile
  ansible.builtin.command:
    cmd: "{{ caddy_install_path }} fmt --overwrite {{ caddy_config_file }}"
  become: yes
  become_user: "{{ caddy_user }}"
  changed_when: true
  notify: restart caddy

- name: Create Caddy Systemd unit file
  ansible.builtin.template:
    src: "templates/caddy.service.j2"
    dest: "/etc/systemd/system/caddy.service"
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: restart caddy

- name: Reload Systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes
  become: yes

- name: Enable and start Caddy service
  ansible.builtin.systemd:
    name: caddy
    enabled: yes
    state: started
  become: yes