# --- Rathole Client Configuration Example ---
rathole_role: "client" # Designates this as a Rathole client configuration
rathole_client_config: # Top-level client settings
  remote_addr: "{{ hostvars['server.example']['ansible_host'] }}:2333" # **Required:** The address of the Rathole server.
  default_token: "default_token_if_not_specify" # Optional: Default token for all services.
  heartbeat_timeout: 40 # Optional: Heartbeat timeout in seconds.
  retry_interval: 1 # Optional: Retry interval in seconds.

  # --- Transport Configuration (Choose ONLY ONE type) ---
  transport:
    type: "noise" # Selected transport type: Noise for secure, lightweight encryption.

    # Noise Transport: Secure and lightweight encryption
    # **Important:** `local_private_key` and `remote_public_key` are typically needed for key exchange.
    noise:
      pattern: "Noise_NK_25519_ChaChaPoly_BLAKE2s" # Optional: Default is "Noise_NK_25519_ChaChaPoly_BLAKE2s".
      local_private_key: "your_client_private_key_base64" # Optional: Base64 encoded private key for the client.
      remote_public_key: "your_server_public_key_base64" # Optional: Base64 encoded public key of the server.

    # TCP Transport
    tcp:
      proxy: "socks5://user:passwd@127.0.0.1:1080"
      nodelay: true
      keepalive_secs: 20
      keepalive_interval: 8

    # TLS Transport
    tls:
      trusted_root: "/etc/ssl/certs/your_ca_certificate.pem"
      hostname: "server1.example.com"

    # WebSocket Transport
    websocket:
      tls: true # If true, uses settings from `client.transport.tls`.

  # --- Service Definitions ---
  services:
    - name: "service1" # Unique service name (must match server-side configuration).
      type: "tcp" # Optional: Can be "tcp" or "udp".
      token: "specific_token_for_service1" # Optional: Overrides `default_token`.
      local_addr: "127.0.0.1:1081" # **Required:** The local service address to be forwarded.
      nodelay: true # Optional: Overrides `client.transport.nodelay`.
      retry_interval: 1 # Optional: Overrides `client.retry_interval`.

    - name: "service2"
      local_addr: "127.0.0.1:1082"

    # Add any other service-specific options here.