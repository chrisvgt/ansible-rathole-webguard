---
# --- Crowdsec Keys ---
crowdsec_api_key: "{{ vault_crowdsec_api_key }}" # Generate key with: head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32
crowdsec_enrollment_key: "{{ vault_crowdsec_enrollment_key }}" # Enrollment key for crowdsec security engine, connect with console

# Global Cloudflare API token if used by multiple domains on this server
cloudflare_api_token: "{{ vault_cloudflare_api_token_server }}"

# --- Example Caddy configuration for multiple domains on this server ---
caddy_sites:
  - name: blog # Used for generating default log file name
    domain: "blog.yourdomain.com"
    local_port: 2368
    # Optional: Customize log settings per site
    # log_file: "/var/log/caddy/blog.access.log"
    # log_roll_size: "20mb"
    # log_roll_keep: 15
    # log_roll_keep_for: "48h"

  - name: ntfy
    domain: "notify.yourdomain.com"
    local_port: 8004
    # Special regex for ntfy http redirect logic
    ntfy_path_regexp: "^/([-_a-z0-9]{0,64}$|docs/|static/)"

# --- Example configuration for rathole server ---
rathole_role: "server" # This variable tells the template it's a server
rathole_server_config: # This will contain all top-level server settings
  listen_addr: "0.0.0.0:2333" # The address Rathole server listens on for clients
  default_token: "default_token_for_all_services_if_not_specified" # Optional
  heartbeat_interval: 30 # Optional. In seconds. Set to 0 to disable.

  # Only ONE 'type' should be configured at a time.
  transport:
    type: "noise" # Selected transport type: Noise for secure, lightweight encryption.

    # --- Noise Transport Configuration ---
    noise:
      # Optional: Default is "Noise_NK_25519_ChaChaPoly_BLAKE2s".
      pattern: "Noise_NK_25519_ChaChaPoly_BLAKE2s"
      # Optional: Base64 encoded private key for the server.
      local_private_key: "your_server_private_key_base64"
      # Optional: Base64 encoded public key of the client.
      remote_public_key: "your_client_public_key_base64"
      # IMPORTANT: For Noise to work, 'local_private_key' and 'remote_public_key'
      # are usually required for key exchange. Uncomment and provide actual keys.

    # --- TCP Transport Configuration ---
    tcp:
      nodelay: true
      keepalive_secs: 20
      keepalive_interval: 8

    # --- TLS Transport Configuration ---
    tls:
      pkcs12: "/path/to/identify.pfx"
      pkcs12_password: "your_pkcs12_password"

    # --- WebSocket Transport Configuration ---
    websocket:
      tls: true # If true, it will use settings from 'server.transport.tls'

 # --- Define multiple services that this server will bind ---
  services:
    - name: "service1" # Unique name for this service (must match client side)
      type: "tcp" # Optional. Default is tcp. Can be "tcp", "udp", "socks5".
      token: "specific_token_for_service1" # Optional. Overrides default_token.
      bind_addr: "0.0.0.0:8081" # The address this specific service is exposed at.
      nodelay: true # Optional.

    - name: "service2"
      bind_addr: "0.0.0.1:8082"

    # Other service-specific options can go here